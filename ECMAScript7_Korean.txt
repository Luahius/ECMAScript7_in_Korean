ECMA International
Standard ECMA-262
언어 명세

해석하면 어색해질 수 밖에 없는 전문용어(예: Undefined Value)는 한국어로 번역하지 않고 그대로 사용하였음을 알립니다.

번역본
By Kai RPM

ECMAScript 2016 언어 명세
asdfasdf
목차
서문
1.범위, 영역
2.양식
3.표준관련
4.개요
4.1 웹 스크립트
4.2 ECMASciprt 개요
4.2.1 객체
4.2.2 ECMAScript의 Strict 변형
4.3 용어와 정의
4.3.1 타입
4.3.2 기본타입
4.3.3 객체
4.3.4 구조체
4.3.5 프로토타입
4.3.6 일반 object
4.3.7 Exotic object (본문 해석하다가 어울리는 단어 선택 번역)
4.3.8 표준 object
4.3.9 Built-in object(본문 해석하다가 어울리는 단어)
4.3.10 Undefined value
4.3.11 Undefined type
4.3.12 null value
4.3.13 Null type
4.3.14 Boolean value
4.3.15 Boolean type
4.3.16 Boolean object
4.3.17 String value
4.3.18 String type
4.3.19 String object
4.3.20 Number value
4.3.21 Number type
4.3.22 Number object
4.3.23 Infinity
4.3.24 
일단 목차가 중요한 게 아니니까 해석부터 합시다.


서문
이 Ecma 표준은 ECMAScript 2016 언어를 정의합니다. 또한, ECMAScript 언어 명세의 7판입니다. 1997년에 첫 판이 발행된 이후로, ECMAScript는 세계에서 가장 널리 사용된 다목적 프로그래밍 언어로 성장했습니다. 웹 브라우저에 내장된 언어로 잘 알려져 있지만 서버와 내장 프로그램으로써 널리 도입되어 왔습니다.
ECMAScript는 가장 잘 알려진 Javascript(Netscape)와 Jscript(Microsoft)의 수많이 생기는 기술들을 기초로 합니다. 이 언어는 Netscape의 Brendan Eich와 Netscape의 첫 번째로 나온 Navigator 2.0 브라우저에 의해 발명됐습니다. 그 후로 나온 Netscape의 모든 브라우저와 Microsoft의 Internet Explorer 3.0가 나오기 시작하면서 모든 브라우저에 포함되었습니다. 
ECMAScript 언어 명세의 발전은 1996년 11월부터 시작했습니다. Ecma총회는 Ecma 표준의 첫 판을 1997년 6월에 규정했습니다. 
Ecma 표준은 규정을 위한 빠른 절차아래에 ISO/IEC JTC 1에게 제출했으며, 1998년 4월에 국제 표준 ISO/IEC 16262에 의해 채택되었다. 1998년 6월 ECAM 총회는 ECMA-262 2판을 ISO/IEC 1626와의 완벽한 제휴를 유지하기 위해 승인했다. 첫 판과 2판의 변경은 사실상 편집되었다.
표준 3판는 사전에 미래 언어 성장을 위해 정규 표현식, 강력한 더 나은 문자열 처리, 새로운 제어 명세, try/catch 예외 처리, 더 엄격한 에러 정의, 숫자출력과 소수치환을 소개했다. ECMAScript 표준의 3판은 1999년 12월에 Ecma 총회에 의해 채택되고 2002 6월 ISO/IEC 16262으로 출판됐다.
3판 출판 이후, ECMAScript는 기본적으로 모든 웹 브라우저에 프로그래밍 언어를 지원하게 된 World Wide Web 연대로써 강력한 규정을 세웠다. 그 중대한 연구는 ECMAScript의 4판을 발전시켰다. 그러나, 그 연구는 ECMAScript 4판으로 완성되지 않았고 발표되지도 않았지만 6판의 개발에 통합시켰다.
(ECMA-262 5판으로써 출판된) ECMAScript 5판은 실제로 언어 명세의 번역은 브라우저 구현과 새로운기능에 대한 3판 출판 이후로 새롭게 나타난 추가된 지원에 대해 체계적으로 정리했다. 
수정했습니다.



1. 범위

   이 표준은 범용 ECMAScript 2016 프로그래밍 언어를 정의합니다.

2. 적합성(?)

   ECMAScript의 적합성 구현(수행 가능한 기능에 적합 요구 사항을 만족하도록 구현하는 것을 말한다.)은 모든 타입과,값,객체,속성,함수와 프로그램의 구문을 본 명세서에 기재된 의미를 제공하고 지원해야합니다.
   
   ECMAScript의 적합성 구현은 유니 코드 버전 8.0.0 이상 및 ISO / IEC 10646을 기준으로 소스 텍스트를 해석합니다.
   
   ECMAScript의 적합성 구현은 애플리케이션 프로그래밍 인터페이스를 제공하고 다양한 사람의 언어 및 국가에서 사용되는 언어와 규칙을 ECMA-402의 가장 최신버전에서 이 명세서와 함께 지원합니다.

   ECMAScript의 적합성 구현은 추가유형,객체,속성,그리고 이 명세서에 기재된 것 이상으로 많은 기능을 제공 할것입니다. 특히, ECMAScript의 적합성 구현은 이 명세서에 설명되어 지지 않은 속성들도 제공할것입니다.

   ECMAScript의 적합성 구현은 이 명세서에 설명되있지 않은 프로그램과 정규 표현식을 지원할 것입니다. 특히, ECMAScript의 적합성 구현은 프로그램 구문이 "미래 예약어"로 만들어지고 미래예약어로 사용되어지는것을 이 명세서의 하위절 11.6.2.2구문에서 지원할 것 입니다.  
   
   ECMAScript의 적합성 구현은 하위 절 16.2에 기재되있는 금지된 확장을 하지 않아야합니다. 